[{"F:\\Work\\MyProjects\\React\\chess\\src\\index.js":"1","F:\\Work\\MyProjects\\React\\chess\\src\\reportWebVitals.js":"2","F:\\Work\\MyProjects\\React\\chess\\src\\App.js":"3","F:\\Work\\MyProjects\\React\\chess\\src\\Components\\Board.js":"4","F:\\Work\\MyProjects\\React\\chess\\src\\Components\\Pieces.js":"5","F:\\Work\\MyProjects\\React\\chess\\src\\Components\\Utils\\Utils.js":"6","F:\\Work\\MyProjects\\React\\chess\\src\\Components\\firebase.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":2004,"mtime":1609333677728,"results":"11","hashOfConfig":"9"},{"size":802,"mtime":1608962621952,"results":"12","hashOfConfig":"9"},{"size":6501,"mtime":1609839644450,"results":"13","hashOfConfig":"9"},{"size":8548,"mtime":1609228995581,"results":"14","hashOfConfig":"9"},{"size":496,"mtime":1611912233294,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1gq7m50",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"F:\\Work\\MyProjects\\React\\chess\\src\\index.js",[],["32","33"],"F:\\Work\\MyProjects\\React\\chess\\src\\reportWebVitals.js",[],"F:\\Work\\MyProjects\\React\\chess\\src\\App.js",[],"F:\\Work\\MyProjects\\React\\chess\\src\\Components\\Board.js",[],"F:\\Work\\MyProjects\\React\\chess\\src\\Components\\Pieces.js",["34"],"import React, { useEffect, useState } from 'react'\r\nimport db from './firebase';\r\nimport './Piece.css';\r\nimport * as myFunc from './Utils/Utils.js';\r\n// \"♔♕♗♘♙♖♚♛♝♞♟♜\"\r\nconst icons = {\r\n    wKing : \"♔\",\r\n    wQueen:\"♕\",\r\n    wBishop:\"♗\",\r\n    wHorse:\"♘\",\r\n    wElephant:\"♖\",\r\n    wPawn:\"♙\",\r\n    bKing : \"♚\",\r\n    bQueen:\"♛\",\r\n    bBishop:\"♝\",\r\n    bHorse:\"♞\",\r\n    bElephant:\"♜\",\r\n    bPawn:\"♟\",\r\n}\r\nconst initialSet=[\r\n    icons.bElephant,icons.bHorse,icons.bBishop,icons.bQueen,icons.bKing,icons.bBishop,icons.bHorse,icons.bElephant,\r\n    icons.bPawn,icons.bPawn,icons.bPawn,icons.bPawn,icons.bPawn,icons.bPawn,icons.bPawn,icons.bPawn,\r\n    \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\r\n    \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\r\n    \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\r\n    \"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\r\n    icons.wPawn,icons.wPawn,icons.wPawn,icons.wPawn,icons.wPawn,icons.wPawn,icons.wPawn,icons.wPawn,\r\n    icons.wElephant,icons.wHorse,icons.wBishop,icons.wQueen,icons.wKing,icons.wBishop,icons.wHorse,icons.wElephant\r\n];\r\n\r\nexport default function Pieces({streamName,player,setPlayer,martyr,setMartyr}) {   \r\n    const [pieceMapping,setPieceMapping] = useState(initialSet);\r\n    const [srcSelected,setSrcSelected] = useState(false);\r\n    var [srcIndex,setSrcIndex] = useState(-1);   \r\n    var destIndex = -1;\r\n    //console.log(streamName);\r\n\r\n    useEffect(()=>{\r\n        checkMate();                    \r\n    });\r\n    useEffect(()=>{\r\n        const unSubscribe = db.collection(\"GameStream\")\r\n        .doc(streamName)\r\n        .get()\r\n        .then((docSnap)=>{\r\n            if(docSnap.exists){\r\n                if(docSnap.data().joinedPlayerOnStream===2){\r\n                    alert(\"This stream is busy!\");\r\n                    console.log(\"Busy Stream\");\r\n                    window.location.reload();\r\n                }\r\n                //Joining the stream\r\n                db.collection(\"GameStream\").doc(streamName).set({\r\n                    playerTurnOnStream:1,\r\n                    joinedPlayerOnStream:2,\r\n                    pieceMappingOnStream:initialSet,\r\n                    martyrListOnStream:martyr,\r\n                }).then(()=>{\r\n                    db.collection(\"GameStream\").doc(streamName).onSnapshot((snapShot)=>{\r\n                        let recievedData = snapShot.data();\r\n                        setPieceMapping(recievedData.pieceMappingOnStream);\r\n                        setPlayer(recievedData.playerTurnOnStream);\r\n                        setMartyr(recievedData.martyrListOnStream);\r\n                    });\r\n                })\r\n            }\r\n            else{\r\n                createGameStream().then(()=>{\r\n                    db.collection(\"GameStream\").doc(streamName).onSnapshot((snapShot)=>{\r\n                        let recievedData = snapShot.data();\r\n                        setPieceMapping(recievedData.pieceMappingOnStream);\r\n                        setPlayer(recievedData.playerTurnOnStream);\r\n                        setMartyr(recievedData.martyrListOnStream);\r\n                    });\r\n                });\r\n            }\r\n        })\r\n        return unSubscribe;\r\n    },[]);\r\n    const createGameStream = async()=>{\r\n        await db.collection(\"GameStream\").doc(streamName).set({\r\n            playerTurnOnStream:1,\r\n            joinedPlayerOnStream:1,\r\n            pieceMappingOnStream:initialSet,\r\n            martyrListOnStream:martyr,\r\n        })\r\n        .then(()=>{console.log(\"Doc initalised\")})\r\n        .catch((err)=>{console.log(err)});\r\n    }\r\n    \r\n\r\n    const checkMate = ()=>{\r\n        if(martyr.includes(icons.wKing)||martyr.includes(icons.bKing)){\r\n            var resp = window.confirm(\"GAME OVER\");\r\n            if(resp===true) window.location.reload();\r\n        } \r\n    }\r\n\r\n    const selectSource= (e)=>{      \r\n        const pieceVal= e.target.innerText;\r\n        const id = e.target.id;\r\n        let index = parseInt(id);\r\n        console.log(player);\r\n        const isValid = myFunc.checkSelectionValidity(pieceVal,player,index,pieceMapping);\r\n        if(!isValid){\r\n            console.log(\"In select source\");\r\n            alert(\"Unvalid selection\");\r\n            return;\r\n        }        \r\n        setSrcIndex(index);\r\n        setSrcSelected(true);        \r\n    }\r\n    \r\n    const selectDest = async (e)=>{\r\n        const pieceVal = e.target.innerText;\r\n        const id = e.target.id;\r\n        console.log(player);\r\n        console.log(srcSelected);\r\n        console.log(pieceVal);\r\n        const isValid = myFunc.checkTargetValidity(pieceVal,player);\r\n        if(!isValid){\r\n            console.log(\"In select dest\");\r\n            alert(\"Unvalid selection\");\r\n            return;\r\n        }\r\n        let index = parseInt(id);\r\n        destIndex = index;\r\n        const canIMove = myFunc.isValidMove(srcIndex,destIndex,pieceMapping);\r\n        if(!canIMove){\r\n            alert(\"Uh oh can't go there\");            \r\n            return;\r\n        }\r\n        //Update piece mapping && change Player;\r\n        const [newMartyrList,newPieceMapping] = myFunc.move(srcIndex,destIndex,pieceMapping,martyr);\r\n        // setPieceMapping(newPieceMapping);\r\n        // setMartyr(newMartyrList);\r\n        // setPlayer((prev)=>{\r\n        //     if(prev===1) return 2;\r\n        //     return 1;\r\n        // });\r\n        let newPlayerTurn = player===1?2:1;\r\n        db.collection(\"GameStream\").doc(streamName).update({\r\n            pieceMappingOnStream:newPieceMapping,\r\n            martyrListOnStream:newMartyrList,\r\n            playerTurnOnStream:newPlayerTurn,\r\n        });\r\n        setSrcSelected(false);  \r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"piece-board\">\r\n                {\r\n                        pieceMapping.map((item,i)=>{ \r\n                                var idStr = i.toLocaleString();\r\n                                                          \r\n                                return <div key={i} id={idStr} className=\"piece\" \r\n                                onClick={(e)=>{\r\n                                    if(srcSelected){\r\n                                        selectDest(e);\r\n                                        \r\n                                    } \r\n                                    else{\r\n                                        selectSource(e);\r\n                                        }\r\n                                    }}> {item} </div>        \r\n                        })\r\n                        \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","F:\\Work\\MyProjects\\React\\chess\\src\\Components\\Utils\\Utils.js",[],"F:\\Work\\MyProjects\\React\\chess\\src\\Components\\firebase.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":79,"column":7,"nodeType":"41","endLine":79,"endColumn":9,"suggestions":"42"},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createGameStream', 'martyr', 'setMartyr', 'setPlayer', and 'streamName'. Either include them or remove the dependency array. If 'setPlayer' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["45"],"no-global-assign","no-unsafe-negation",{"desc":"46","fix":"47"},"Update the dependencies array to be: [createGameStream, martyr, setMartyr, setPlayer, streamName]",{"range":"48","text":"49"},[3078,3080],"[createGameStream, martyr, setMartyr, setPlayer, streamName]"]